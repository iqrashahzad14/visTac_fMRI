2+2
3+4
I=1;
Q=2;
R=I+Q;
R
who
help(package = car)
c(2, 4, -1)
A=c(2, 4, -1);
A=c(2, 4, -1)
B=c("e", 2);
F=c(1, 5/6, 2^3, -.05);
seq(from=1, to=7, by = 1)
seq(from=1, to=7, length.out = 10)
help("seq")
rep(1,10)
seq(from=1, to=7, by = 0.2)
rep("a", 5)
rep(c("group1","group2"), c(2,3))
rep(c("groupe1","groupe2"), each=2)
x <- c(2.1, 5, -4, 1, 5)
c(2.1, 5, -4, 1, 5) -> x1
rep(c("group1","group2"), 2)
x<-(1,2,3,4,5)
x<-c(1,2,3,4,5)
x[3]
x[-3]
x[-4]
x[-c(2,3)]
x[c(-2,-3)]
x[c(1:3)]
[c(1:3)]
x[c(1,2,4)]
x[c(TRUE, TRUE, FALSE, TRUE, FALSE)]
x[<-3]
x[c(3)]<-2
x]
x
assign("x3", c(2.1, 5, -4, 1, 5))
x3
x[c(TRUE, TRUE, FALSE, TRUE, FALSE)]
class(x)
is(x)
is.numeric(x)
x_char <- as.character(x)
rm(list = ls())
x=c(1,2,3,4,5)
x_char <- as.character(x)
x_char
as.numeric(x_char)
as.numeric(c(x_char, "ads"))
x_char
c(x_char, "ads")
as.numeric(c(x_char, "ads"))
a<-1
a
b<-9
c=a+b
c
install.packages("car"); install.packages("ggplot2"); install. packages("nlme"); install.packages("reshape")
install.packages("car"); install.packages("ggplot2"); install.packages("nlme"); install.packages("reshape")
library(car); library(ggplot2); library(nlme); library(reshape)
x<-1
print(x)
msg<-"hello"
print(msg)
x
msg
x<-1:20
x
vecto()
vector()
attributes(x)
attributes(msg)
# Plot a line between subjects over two conditions within the same cateogory plotted on x
#
# To improve: the points are not filled with white to cover the below line :()
#
# # (C) Copyright 2021 Marco Barilari
# Prepare some mock data
emo_standardVsScramble <- data.frame(
SubjID = rep(c('Subj1', 'Subj2'), 10),
Condition = rep(c('Standard', 'Scramble'), each = 10),
Emotion = rep(rep(c('Anger', 'Disgust', 'Fear', 'Happy', 'Sad'), each = 2), 2),
d_prime = c(round(runif(10, 1.5, 2.5), 2), round(runif(10, -0.5, 1.5), 2)))
# Here the numbers needs to be adjusted according to the "size" od your data:
# this is to reorder the conditions (Standard is plotted on the left)
emo_standardVsScramble$orderCond <- rep(1:2, each = 10)
# this is to group the data to draw the lines, same value per subjX and emotion across conditions
# eg Subj1 has the same value '1' for the same emotion for Standard and Scramble
emo_standardVsScramble$orderCondPerSubj <- rep(1:10, 2)
# Here you plot
ggplot(emo_standardVsScramble,
aes( x = as.numeric(interaction(reorder(Condition, orderCond), Emotion)),
y = d_prime,
shape = Condition,
colour = Emotion)) +
geom_line(group = emo_standardVsScramble$orderCondPerSubj,
size = 1,
show.legend = F) +
geom_point(size = 6,
show.legend = T,
fill = "white",
stroke = 1.5) +
scale_shape_manual(values = c(1, 2), breaks=c('Standard', 'Scramble')) +
theme_classic() +
scale_x_continuous( breaks = c(1.5, 3.5, 5.5, 7.5, 9.5),
labels = levels(emo_standardVsScramble$Emotion)) +
guides(col = FALSE) +
xlab('')+
ylab("d'")+
ggtitle('Isolation task') +
theme(
text=element_text(size=20),
legend.position = 'right',
legend.text=element_text(size=18),
axis.line.y = element_line(size = 1),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(size=17,colour="black"),
axis.text.y = element_text(size=17, colour='black'))
library(ggplot2)
# Plot a line between subjects over two conditions within the same cateogory plotted on x
#
# To improve: the points are not filled with white to cover the below line :()
#
# # (C) Copyright 2021 Marco Barilari
library(ggplot2)
# Prepare some mock data
emo_standardVsScramble <- data.frame(
SubjID = rep(c('Subj1', 'Subj2'), 10),
Condition = rep(c('Standard', 'Scramble'), each = 10),
Emotion = rep(rep(c('Anger', 'Disgust', 'Fear', 'Happy', 'Sad'), each = 2), 2),
d_prime = c(round(runif(10, 1.5, 2.5), 2), round(runif(10, -0.5, 1.5), 2)))
# Here the numbers needs to be adjusted according to the "size" od your data:
# this is to reorder the conditions (Standard is plotted on the left)
emo_standardVsScramble$orderCond <- rep(1:2, each = 10)
# this is to group the data to draw the lines, same value per subjX and emotion across conditions
# eg Subj1 has the same value '1' for the same emotion for Standard and Scramble
emo_standardVsScramble$orderCondPerSubj <- rep(1:10, 2)
# Here you plot
ggplot(emo_standardVsScramble,
aes( x = as.numeric(interaction(reorder(Condition, orderCond), Emotion)),
y = d_prime,
shape = Condition,
colour = Emotion)) +
geom_line(group = emo_standardVsScramble$orderCondPerSubj,
size = 1,
show.legend = F) +
geom_point(size = 6,
show.legend = T,
fill = "white",
stroke = 1.5) +
scale_shape_manual(values = c(1, 2), breaks=c('Standard', 'Scramble')) +
theme_classic() +
scale_x_continuous( breaks = c(1.5, 3.5, 5.5, 7.5, 9.5),
labels = levels(emo_standardVsScramble$Emotion)) +
guides(col = FALSE) +
xlab('')+
ylab("d'")+
ggtitle('Isolation task') +
theme(
text=element_text(size=20),
legend.position = 'right',
legend.text=element_text(size=18),
axis.line.y = element_line(size = 1),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_text(size=17,colour="black"),
axis.text.y = element_text(size=17, colour='black'))
1-(1/0.23)
1/0.23
1/3.34
sqrt
sqrt(1/3.34)
1/0.68
1/sqrt(0.47)
1/0.68
1.470588-1
sqrt(0.47)
1/0.68
install.packages("pwr")
library(pwr)
d
d<-2/2.8
pwr.t.test(d=d,n=30,sig.level=0.05,type="two.sample",alternative="two.sided")
d
d=1.48
pwr.t.test(d=d,n=30,sig.level=0.05,type="two.sample",alternative="two.sided")
d=1.48
pwr.t.test(d=d,sig.level=0.05,power = 0.9 type="two.sample",alternative="two.sided")
d=1.48
pwr.t.test(d=d,sig.level=0.05,power = 0.9,type="two.sample",alternative="two.sided")
d=1.65
pwr.t.test(d=d,sig.level=0.05,power = 0.9,type="two.sample",alternative="two.sided")
d=0.28
pwr.t.test(d=d,sig.level=0.05,power = 0.9,type="two.sample",alternative="two.sided")
d=0.56
pwr.t.test(d=d,sig.level=0.05,power = 0.9,type="two.sample",alternative="two.sided")
citation()
setwd("/Volumes/IqraMacFmri/visTac/fMRI_analysis/code/behavResp")
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("your_file.xlsx")
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -Subject_ID, names_to = "Variable", values_to = "Value")
install.packages("tidyr")
library(tidyr)
library(dplyr)
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -Subject_ID, names_to = "Variable", values_to = "Value")
View(data)
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -SubID, names_to = "Variable", values_to = "Value")
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
View(data)
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
View(data_long)
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error
p <- ggplot(summary_data, aes(x = Variable, y = mean)) +
geom_errorbar(aes(ymin = mean - std_err, ymax = mean + std_err), width = 0.2) +
geom_point(data = data_long, aes(x = Variable, y = Value, group = Subject_ID), alpha = 0.5) +
geom_line(data = data_long, aes(x = Variable, y = Value, group = Subject_ID), alpha = 0.5) +
labs(x = "Variable", y = "Value", title = "Mean with Standard Error") +
theme_minimal()
# Print the plot
print(p)
# Plot the mean and standard error
p <- ggplot(summary_data, aes(x = Variable, y = mean)) +
geom_errorbar(aes(ymin = mean - std_err, ymax = mean + std_err), width = 0.2) +
geom_point(data = data_long, aes(x = Variable, y = Value, group = subID), alpha = 0.5) +
geom_line(data = data_long, aes(x = Variable, y = Value, group = subID), alpha = 0.5) +
labs(x = "Variable", y = "Value", title = "Mean with Standard Error") +
theme_minimal()
# Print the plot
print(p)
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, fill = as.factor(subID))) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(data = data_long, aes(group = subID), position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(x = Variable, ymin = mean - std_err, ymax = mean + std_err), position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, fill = as.factor(subID))) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(data = data_long, aes(group = subID), position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(x = Variable, ymin = mean - std_err, ymax = mean + std_err), position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
rlang::last_trace()
# Print the plot
print(p)
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, fill = as.factor(subID))) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, fill = as.factor(subID))) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
View(data_long)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, group = subID)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(aes(color = as.factor(subID)), position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, group = subID)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(aes(color = as.factor(subID)), position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, group = subID)) +
geom_bar(stat = "summary", fun = "mean", position = "dodge") +
geom_point(aes(color = as.factor(subID)), position = position_dodge(width = 0.9), alpha = 0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Grouped Bar Plot with Individual Subject Data") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
# Load necessary libraries
library(readxl)
library(ggplot2)
library(dplyr)
# Read the data from the .xlsx file
data <- read_excel("behavAccu.xlsx")
# Melt the data to long format for easier plotting
data_long <- data %>%
pivot_longer(cols = -subID, names_to = "Variable", values_to = "Value")
# Calculate mean and standard error for each variable
summary_data <- data_long %>%
group_by(Variable) %>%
summarize(mean = mean(Value),
std_err = sd(Value) / sqrt(n()))
# Plot the mean and standard error with individual subject data as dots
p <- ggplot(data_long, aes(x = Variable, y = Value, fill = as.factor(subID))) +
geom_dotplot(binaxis='y', stackdir='center', position=position_dodge(width=0.9), dotsize=0.5) +
geom_errorbar(data = summary_data, aes(y = mean, ymin = mean - std_err, ymax = mean + std_err),
position = position_dodge(width = 0.9), width = 0.25) +
labs(x = "Variable", y = "Value", title = "Dot Plot with Mean and Standard Error") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Print the plot
print(p)
View(data)
